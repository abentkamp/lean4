git clone https://github.com/leanprover/lean4 --recurse-submodules
cd lean4
mkdir -p build/release
cd build/release
emcmake cmake ../..
make

cmake ../..

cmake ../.. -D CMAKE_C_COMPILER=emcc -D CMAKE_CXX_COMPILER=emcc -D CMAKE_SYSTEM_NAME=Emscripten -DUSE_GMP=OFF -DCMAKE_C_FLAGS=fPIC -DCMAKE_CXX_FLAGS=-fPIC

make

cmake ../.. -D CMAKE_C_COMPILER=emcc -D CMAKE_CXX_COMPILER=emcc -D CMAKE_SYSTEM_NAME=Emscripten -DUSE_GMP=OFF -DCMAKE_C_FLAGS=fPIC -DCMAKE_CXX_FLAGS=-fPIC

make


cd ~/Projects/lean4/build/release/stage1/lib/temp
emcc Hello.c -I /home/alex/Projects/lean4/build/release/stage1/include/ -L /home/alex/Projects/lean4/build/release/stage1/lib/lean -l leanshared -o hello.html -O0 -g


  function instantiateAsync() {
    if (false &&



Module['arguments'] = ['prelude\n#check Prop']


node --no-experimental-fetch

To enable NodeFS:
emcc Hello.c -I /home/alex/Projects/lean4/build/release/stage1/include/ -L /home/alex/Projects/lean4/build/release/stage1/lib/lean -l leanshared -o hello.html -O0 -g -lnodefs.js


cat <(echo "var Module={arguments:['prelude\n#check Prop']};") hello | node

Compiling Prelude needs to increase memory and stack size:
emcc Hello.c -I /home/alex/Projects/lean4/build/release/stage1/include/ -L /home/alex/Projects/lean4/build/release/stage1/lib/lean -l leanshared -o hello.html -O0 -g -lnodefs.js -sSTACK_SIZE=1200000 -sALLOW_MEMORY_GROWTH=1



Recompiling shell.cpp
emcc stage1/src/lean/util/shell.cpp -I /home/alex/Projects/lean4/src -I /home/alex/Projects/lean4/build/release/stage1/include/ -I /home/alex/Projects/lean4/build/release/stage1 -L /home/alex/Projects/lean4/build/release/stage1/lib/lean  -o shell.html -O0 -g -lnodefs.js -sSTACK_SIZE=1200000 -sALLOW_MEMORY_GROWTH=1

----
Okay, no the building works as expected:

emcmake cmake ../.. -DCMAKE_C_FLAGS=fPIC -DCMAKE_CXX_FLAGS=-fPIC
make

Not sure if the PIC args are still needed.


----
Finally a single command that does not trigger the Name.set 64x issue:
cmake ../.. -D CMAKE_C_COMPILER=emcc -D CMAKE_CXX_COMPILER=emcc -DUSE_GMP=OFF -DCMAKE_C_FLAGS=fPIC -DCMAKE_CXX_FLAGS=-fPIC -DCMAKE_C_COMPILER_WORKS=1
make
